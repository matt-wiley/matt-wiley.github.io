{"version":3,"sources":["services/ExperienceDataService.ts","services/DataPresentationService.ts","components/DefaultSpacer.tsx","components/List.tsx","components/NamePlate.tsx","components/RoleSummary.tsx","components/SectionHeader.tsx","components/SectionBody.tsx","components/Section.tsx","components/WebLink.tsx","pages/Resume.tsx","components/Redirect.tsx","pages/Experience.tsx","components/Nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ExperienceDataService","[object Object]","this","rawEmployerData","experienceData","DataPresentationService","dateString","undefined","Date","toLocaleDateString","month","year","DefaultSpacer","props","heightClass","React","createElement","className","ListType","List","listStyle","numbered","bulleted","none","type","None","items","map","item","i","_","key","itemStyle","NamePlate","name","labelLine","phone","email","location","RoleSummary","role","company","startDate","endDate","synopsis","Bulleted","accomplishments","SectionHeader","text","SectionBody","children","Section","headerText","WebLink","image","src","concat","alt","icon","href","link","WebLinksList","fa_base","webLinkElements","index","SecondaryInfoSpacer","SecondaryInfo","Fragment","Home","title","getExperienceData","employer","roles","presenter","presentDate","start_date","end_date","description","notes","filter","note","is_enabled","summary","Redirect","navigate","useNavigate","useEffect","console","log","to","Experience","Nav","navItems","App","HashRouter","Routes","Route","path","element","Resume","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.686af920.chunk.js","sourcesContent":["import experienceData from '../data/experience.json';\n\ntype nullableString = string|undefined|null;\n\nexport interface IEmployer {\n  end_date: nullableString;\n  location: nullableString;\n  name: nullableString;\n  roles: IRole[];\n  start_date: nullableString;\n}\n\nexport interface IRole {\n  description: nullableString;\n  end_date: nullableString;\n  notes: INote[];\n  start_date: nullableString;\n  title: nullableString;\n}\n\nexport interface INote {\n  summary: nullableString;\n  is_enabled: boolean;\n}\n\nexport class ExperienceDataService {\n\n  private static rawEmployerData: IEmployer[] = experienceData[\"employers\"];\n\n  static getExperienceData(): IEmployer[] {\n    return this.rawEmployerData;\n  }\n\n}","\n\nexport class DataPresentationService {\n\n  /**\n   * Present a date for experience in a human-readable format.\n   * \n   * @param dateString \n   * @returns \n   */\n  public static presentDate(dateString:string|undefined|null): string {\n    if (dateString === null || dateString === undefined) {\n      return 'Present'\n    }\n    const date = new Date(dateString)\n    return date.toLocaleDateString('en-US', { month: 'short', year: 'numeric' })\n  }\n\n}","import React from 'react';\n\ninterface IDefaultSpacerProps {\n  heightClass?: string;\n}\n\nconst DefaultSpacer = (props: IDefaultSpacerProps) => {\n  const heightClass = props.heightClass || 'h-1';\n  return (\n    <div className={heightClass}>\n      &nbsp;\n    </div>\n  );\n};\n\nexport default DefaultSpacer;","import React from 'react';\n\nexport enum ListType {\n  Numbered = \"numbered\",\n  Bulleted = \"bulleted\",\n  None = \"none\"\n}\n\ninterface IListProps {\n  type: ListType;\n  items: string[] | JSX.Element[];\n  itemStyle?: string;\n}\n\n\nconst List = (props: IListProps) => {\n\n  const listType = props.type || ListType.None\n\n  const listStyle = (() => {\n    return {\n      \"numbered\": \"list-decimal pl-4\",\n      \"bulleted\": \"list-disc pl-4\",\n      \"none\": \"list-none\"\n    }[listType] || \"\"\n  })();\n\n  return (\n    <ul className={listStyle}>\n      { \n        props.items.map((item, i, _) => {\n          return (\n            <li key={i} className={props.itemStyle}>{item}</li>\n          );\n        })\n      }\n    </ul>\n  )\n};\n\nexport default List;","import React from 'react';\n\ninterface INamePlateProps {\n  name: string,\n  labelLine: string,\n  phone: string,\n  email: string,\n  location: string,\n}\n\nconst NamePlate = (props: INamePlateProps) => {\n  return (\n    <div className=\"p-2 w-full flex flex-col\">\n      <h1 className=\"w-full text-4xl text-center font-black uppercase tracking-widest\">{props.name}</h1>\n      <div className=\"flex flex-row justify-center align-middle\">\n        <div className=\"w-full text-sm text-center uppercase tracking-wider\">{props.labelLine}</div>\n      </div>\n      <div className=\"flex flex-row justify-center align-middle\">\n        <div className=\"text-xs\">{props.phone} | {props.email} | {props.location}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default NamePlate;","import React from 'react';\nimport { PropsWithChildren } from \"react\";\nimport List, { ListType } from \"./List\";\n\ninterface IRoleSummaryProps extends PropsWithChildren {\n  role: string;\n  company: string;\n  startDate: string;\n  endDate: string;\n  synopsis: string;\n  accomplishments: string[] | JSX.Element[];\n}\n\nconst RoleSummary = (props: IRoleSummaryProps) => {\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"flex flex-col md:flex-row justify-between\">\n        <div className=\"flex flex-col md:flex-row justify-start\">\n          <h4 className=\"font-bold pr-2\">{props.role}</h4>\n          <span className=\"inline-block text-gray-500\">{props.company}</span>\n        </div>\n        <div className=\"inline-block text-gray-500\">\n          {props.startDate} - {props.endDate}\n        </div>\n      </div>\n      { \n        (props.synopsis !== 'null' && props.synopsis !== 'undefined') ? \n          <div className=\"pt-2\">\n            {props.synopsis}\n          </div> : ''\n      }\n      <div className=\"p-4 test-xs\">\n        <List \n          type={ListType.Bulleted}\n          items={props.accomplishments}\n          itemStyle=\"pb-2\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default RoleSummary;","import React from 'react';\n\ninterface ISectionHeaderProps {\n  text: string;\n}\n\nconst SectionHeader = (props: ISectionHeaderProps) => {\n  \n  return (\n    <h4 className=\"pb-3 text-sm font-bold uppercase tracking-wider\">{props.text}</h4>\n  );\n};\n\nexport default SectionHeader;","import React from 'react';\n\nimport { PropsWithChildren } from \"react\";\n\ninterface ISectionBodyProps extends PropsWithChildren {\n\n}\n\nconst SectionBody = (props: ISectionBodyProps) => {\n  return (\n    <div className=\"text-sm\">\n        { (props.children) ? props.children : <span>No content</span>  }\n    </div>\n  );\n};\n\nexport default SectionBody;","import React from 'react';\n\nimport { PropsWithChildren } from \"react\";\n\nimport SectionHeader from \"./SectionHeader\";\nimport SectionBody from \"./SectionBody\";\n\ninterface ISectionProps extends PropsWithChildren{\n  headerText: string;\n}\n\nconst Section = (props: ISectionProps) => {\n  return (\n    <div className=\"p-2\">\n      {\n        (props.headerText !== 'null' && props.headerText !== 'undefined') ? \n        <SectionHeader text={props.headerText} /> : ''\n      }\n      <SectionBody>\n        {props.children}\n      </SectionBody>\n    </div>\n  );\n};\n\nexport default Section;","import React from 'react';\n\ninterface IWebLinkProps {\n  icon?: string;\n  image?: string;\n  link: string;\n  text: string;\n}\n\nconst WebLink = (props: IWebLinkProps) => {\n\n  const defaultIcon = 'fas fa-globe'\n\n  return (\n    <div className=\"w-full flex flex-row justify-start align-middle\">\n      <div className=\"w-5 h-5 mr-2 text-center\">\n        { (!props.image) ? \n          <i className={`${props.icon || defaultIcon}`} /> : \n          <img src={`${ props.image }`} alt={props.text} className=\"w-5 h-5 mr-2\" /> \n        }\n      </div>\n      <a className=\"text-black hover:text-blue-400\" href={props.link}>{props.text}</a>\n    </div>\n  );\n};\n\nexport default WebLink;","import React, { Fragment } from 'react';\n\nimport { ExperienceDataService } from '../services/ExperienceDataService';\nimport { DataPresentationService as presenter } from '../services/DataPresentationService';\n\n\nimport DefaultSpacer from '../components/DefaultSpacer';\nimport List, { ListType } from '../components/List';\nimport NamePlate from '../components/NamePlate';\nimport RoleSummary from '../components/RoleSummary';\nimport Section from '../components/Section';\nimport WebLink from '../components/WebLink';\n\n\ninterface IResumeProps {\n\n}\n\n\n\nconst WebLinksList = () => {\n\n  const fa_base = 'fa-lg fa-fw'\n\n  const links = [\n    {\n      icon: `${fa_base} fa-brands fa-github`,\n      link: 'https://github.com/matt-wiley',\n      text: 'matt-wiley'\n    },\n    {\n      icon: `${fa_base} fa-brands fa-linkedin`,\n      link: 'https://www.linkedin.com/in/matt-b-wiley',\n      text: 'in/matt-b-wiley'\n    },\n    {\n      icon: `${fa_base} fa-brands fa-instagram`,\n      link: 'https://www.instagram.com/matt.wiley.person',\n      text: '@matt.wiley.person'\n    },\n    {\n      icon: `${fa_base} fas fa-globe`,\n      link: 'https://matt-wiley.github.io',\n      text: 'matt-wiley.github.io'\n    }\n  ]\n\n  const webLinkElements = (() => {\n    return links.map((link, index) => {\n      return (\n        <div className='pb-0.5'>\n          <WebLink key={index} icon={link.icon} link={link.link} text={link.text} />\n        </div>\n      )\n    })\n  })()\n\n  return (\n    <List type={ListType.None} items={webLinkElements} />\n  )\n}\n\nconst SecondaryInfoSpacer = () => {\n  return (\n    <div className='h-6'>\n      &nbsp;\n    </div>\n  )\n}\n\nconst SecondaryInfo = () => {\n  return (\n    <>\n      <Section headerText=\"Education\">\n        <div className=' font-semibold'>BS in Computer Science</div>\n        <div>Northern Kentucky University</div>\n        <div>College of Informatics</div>\n        <div>December 2012</div>\n      </Section>\n      <SecondaryInfoSpacer />\n      <Section headerText=\"Strengths\">\n        <List type={ListType.None} items={[\n          \"Leadership\",\n          \"Coaching\",\n          \"Strategic Thinking\",\n          \"Process Improvement\",\n        ]} />\n        <DefaultSpacer heightClass='h-3'/>\n        <List type={ListType.None} items={[\n          \"Java\",\n          \"Python\",\n          \"Git\",\n          \"Shellscript\",\n          \"Linux\",\n          \"VS Code\",\n          \"IntelliJ IDEA\",\n          \"GitHub Actions\"\n        ]} />\n      </Section>\n      <SecondaryInfoSpacer />\n      <Section headerText=\"Hobbies & Interests\">\n        <List type={ListType.None} items={[\n          \"Reading\",\n          \"Drawing, Painting, Making\",\n          \"Writing\",\n          \"Learning\",\n          \"Solving puzzles\"\n        ]} />\n        <DefaultSpacer heightClass='h-3'/>\n        <List type={ListType.None} items={[\n          \"Physics & Cosmology\",\n          \"Fiction & Sci-Fi\",\n          \"PBS Spacetime\",\n          \"PBS Eons\"\n        ]} />\n      </Section>\n      <SecondaryInfoSpacer />\n      <Section headerText='Links'>\n        <WebLinksList />\n      </Section>\n    </>\n  )\n}\n\n\nconst Home = (props: IResumeProps) => {\n  return (\n    <>\n      <div className=\"max-w-4xl m-auto pl-5 pr-5 relative\">\n        <a\n          href=\"/downloads/Resume_Wiley.pdf\"\n          className='absolute top-0 right-0 text-sm text-gray-500 print:hidden pr-7'\n          title=\"Printable Version\"\n        >🖨️<span className='hidden md:inline'> Printable Version</span></a>\n        <div className=\" h-fit w-full border-b-2 print:border-gray-400 pb-4\">\n          {/* HEADER */}\n          <NamePlate\n            name=\"Matt Wiley\"\n            labelLine=\"Software Engineer | Tech Lead | Mentor\"\n            phone=\"859.206.0007\"\n            email=\"matt.wiley@fastmail.com\"\n            location=\"Fort Thomas, KY\"\n          />\n          <div className='text-justify'>\n            <Section headerText=\"\">\n              Software engineer with a passion for continuous improvement and automation and over ten years experience across the full software development stack. Seeking opportunity to join a diverse team of engineers to learn from, lead and mentor while delivering well-crafted solutions to business problems.\n            </Section>\n          </div>\n        </div>\n        <div className='flex flex-row w-full mt-4'>\n          <div className='flex-none w-full md:w-9/12 print:w-9/12 pr-6'>\n            {/* MAIN CONTENT */}\n            <Section headerText=\"Experience\">\n              {\n                ExperienceDataService.getExperienceData().map((employer, index) => {\n                  return (\n                    <Fragment key={index}>\n                      <List type={ListType.None} items={employer.roles.map((role, index) => {\n                        return (\n                          <Fragment key={index}>\n                            <RoleSummary \n                              role={''+role.title} \n                              company={''+employer.name}\n                              startDate={presenter.presentDate(role.start_date)}\n                              endDate={presenter.presentDate(role.end_date)}\n                              synopsis={''+role.description}\n                              accomplishments={role.notes.filter(note => note.is_enabled).map((note, index) => {\n                                return (\n                                  <div key={index}>{note.summary}</div>\n                                )\n                              })}\n                              />\n                            <DefaultSpacer />\n                          </Fragment>\n                        )\n                      })} />\n                    </Fragment>\n                  )\n                })\n              }\n            </Section>\n            <div className='border-t-2 mb-20 md:hidden print:hidden'>\n              <DefaultSpacer />\n              <SecondaryInfo />\n            </div>\n          </div>\n          <div className='flex-none w-0 invisible md:visible md:w-3/12 md:border-l-2 print:visible print:border-gray-400 md:pl-2'>\n            {/* SIDEBAR */}\n            <SecondaryInfo />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n\nexport default Home;","import React from 'react';\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface IRedirectProps {\n  to: string\n}\n\nconst Redirect = (props: IRedirectProps) => {\n  \n  const navigate = useNavigate();\n  \n  return (\n    <>\n      {\n        useEffect(() => {\n          console.log(`Redirecting to ${props.to}`);\n          navigate(`${props.to}`);\n        })\n      }\n    </>\n  );\n};\n\nexport default Redirect;","import React, { Fragment } from 'react';\nimport Section from '../components/Section';\nimport DefaultSpacer from '../components/DefaultSpacer';\nimport RoleSummary from '../components/RoleSummary';\nimport { ExperienceDataService } from '../services/ExperienceDataService';\nimport List, { ListType } from '../components/List';\n\n\nimport { DataPresentationService as presenter } from '../services/DataPresentationService';\nimport NamePlate from '../components/NamePlate';\n\ninterface IExperienceProps {\n}\n\nconst Experience = (props: IExperienceProps) => {\n  return (\n    <>\n      <div className=\"max-w-4xl m-auto pl-5 pr-5 relative\">\n        <div className=\" h-fit w-full border-b-2 print:border-gray-400 pb-4\">\n          {/* HEADER */}\n          <NamePlate\n            name=\"Matt Wiley\"\n            labelLine=\"Software Engineer | Tech Lead | Mentor\"\n            phone=\"859.206.0007\"\n            email=\"matt.wiley@fastmail.com\"\n            location=\"Fort Thomas, KY\"\n          />\n        </div>\n        <div className='flex flex-row w-full mt-4'>\n          <div className='flex-none w-full pr-6'>\n            {/* MAIN CONTENT */}\n            <Section headerText=\"Experience\">\n              {\n                ExperienceDataService.getExperienceData().map((employer, index) => {\n                  return (\n                    <Fragment key={index}>\n                      <List type={ListType.None} items={employer.roles.map((role, index) => {\n                        return (\n                          <Fragment key={index}>\n                            <RoleSummary\n                              role={'' + role.title}\n                              company={'' + employer.name}\n                              startDate={presenter.presentDate(role.start_date)}\n                              endDate={presenter.presentDate(role.end_date)}\n                              synopsis={'' + role.description}\n                              accomplishments={role.notes.map((note, index) => {\n                                return (\n                                  <div key={index}>{note.summary}</div>\n                                )\n                              })}\n                            />\n                            <DefaultSpacer heightClass='h-8' />\n                          </Fragment>\n                        )\n                      })} />\n                    </Fragment>\n                  )\n                })\n              }\n            </Section>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Experience;","import React from 'react';\n\ninterface INavItem {\n  text: string,\n  link: string\n}\n\ninterface INavProps{\n  navItems: INavItem[]\n}\n\nconst Nav = (props: INavProps) => {\n\n  const containerStyle = 'w-full flex flex-row justify-start align-middle'\n  const linkStyle = 'inline-block p-4'\n\n  return (\n    <div className={containerStyle}>\n      {\n        props.navItems.map((item, index) => {\n          return (\n            <a href={ '/#'+item.link } className={linkStyle} key={index}>{item.text}</a>\n          )\n        })\n      }\n    </div>\n  );\n};\n\nexport default Nav;","import React from 'react';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\nimport Resume from './pages/Resume';\nimport Redirect from './components/Redirect';\nimport Experience from './pages/Experience';\nimport Nav from './components/Nav';\n\nimport './App.css';\n\n\nfunction App() {\n\n  const SHOW_SIGNALS = false;\n\n  return (\n    <>\n      <div className='flex flex-row print:invisible relative'>\n        <Nav navItems={[\n          {\n            text: 'Resume',\n            link: '/resume'\n          },\n          {\n            text: 'Experience',\n            link: '/experience'\n          }\n        ]}/>\n        {\n          (SHOW_SIGNALS) ?\n            <div className='flex flex-row pr-4'>\n              {/* SIGNALS FOR WHAT RESPONSIVE WIDTHS ARE FIRING */}\n              <span className='text-gray-400 sm:text-red-500'>SM</span>&nbsp;|&nbsp;\n              <span className='text-gray-400 md:text-red-500'>MD</span>&nbsp;|&nbsp;\n              <span className='text-gray-400 lg:text-red-500'>LG</span>&nbsp;|&nbsp;\n              <span className='text-gray-400 xl:text-red-500'>XL</span>&nbsp;|&nbsp;\n              <span className='text-gray-400 2xl:text-red-500'>2XL</span>\n            </div>\n          :\n            null\n        }\n      </div>\n      <div className='mbw-min-w'>\n        <HashRouter>\n          <Routes>\n            <Route path=\"*\" element={<Redirect to=\"/resume\" /> } />\n            <Route path=\"/\" element={<Redirect to=\"/resume\" /> } />\n            <Route path=\"/resume\" element={<Resume /> } />\n            <Route path=\"/experience\" element={<Experience /> } />\n          </Routes>\n        </HashRouter>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}